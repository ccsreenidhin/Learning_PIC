D G "__PCM__" 0 264 ""4.057""
D G "__DEVICE__" 0 264 "73"
D G "__DATE__" 0 264 ""08-Dec-14""
D G "__TIME__" 0 264 ""12:40:15"" "Standard Header file for the PIC16F73 device ////////////////"
d G "PIN_A0" 2 17 "40"
d G "PIN_A1" 2 18 "41"
d G "PIN_A2" 2 19 "42"
d G "PIN_A3" 2 20 "43"
d G "PIN_A4" 2 21 "44"
d G "PIN_A5" 2 22 "45"
d G "PIN_B0" 2 24 "48"
d G "PIN_B1" 2 25 "49"
d G "PIN_B2" 2 26 "50"
d G "PIN_B3" 2 27 "51"
d G "PIN_B4" 2 28 "52"
d G "PIN_B5" 2 29 "53"
d G "PIN_B6" 2 30 "54"
d G "PIN_B7" 2 31 "55"
d G "PIN_C0" 2 33 "56"
d G "PIN_C1" 2 34 "57"
d G "PIN_C2" 2 35 "58"
d G "PIN_C3" 2 36 "59"
d G "PIN_C4" 2 37 "60"
d G "PIN_C5" 2 38 "61"
d G "PIN_C6" 2 39 "62"
d G "PIN_C7" 2 40 "63"
d G "FALSE" 2 43 "0"
d G "TRUE" 2 44 "1"
d G "BYTE" 2 46 "int8"
d G "BOOLEAN" 2 47 "int1"
d G "getc" 2 49 "getch"
d G "fgetc" 2 50 "getch"
d G "getchar" 2 51 "getch"
d G "putc" 2 52 "putchar"
d G "fputc" 2 53 "putchar"
d G "fgets" 2 54 "gets"
d G "fputs" 2 55 "puts"
d G "WDT_FROM_SLEEP" 2 60 "3"
d G "WDT_TIMEOUT" 2 61 "11"
d G "MCLR_FROM_SLEEP" 2 62 "19"
d G "MCLR_FROM_RUN" 2 63 "27"
d G "NORMAL_POWER_UP" 2 64 "25"
d G "BROWNOUT_RESTART" 2 65 "26"
d G "RTCC_INTERNAL" 2 73 "0"
d G "RTCC_EXT_L_TO_H" 2 74 "32"
d G "RTCC_EXT_H_TO_L" 2 75 "48"
d G "RTCC_DIV_1" 2 77 "8"
d G "RTCC_DIV_2" 2 78 "0"
d G "RTCC_DIV_4" 2 79 "1"
d G "RTCC_DIV_8" 2 80 "2"
d G "RTCC_DIV_16" 2 81 "3"
d G "RTCC_DIV_32" 2 82 "4"
d G "RTCC_DIV_64" 2 83 "5"
d G "RTCC_DIV_128" 2 84 "6"
d G "RTCC_DIV_256" 2 85 "7"
d G "RTCC_8_BIT" 2 88 "0"
d G "WDT_18MS" 2 100 "0x8008"
d G "WDT_36MS" 2 101 "9"
d G "WDT_72MS" 2 102 "10"
d G "WDT_144MS" 2 103 "11"
d G "WDT_288MS" 2 104 "12"
d G "WDT_576MS" 2 105 "13"
d G "WDT_1152MS" 2 106 "14"
d G "WDT_2304MS" 2 107 "15"
d G "T1_DISABLED" 2 113 "0"
d G "T1_INTERNAL" 2 114 "0x85"
d G "T1_EXTERNAL" 2 115 "0x87"
d G "T1_EXTERNAL_SYNC" 2 116 "0x83"
d G "T1_CLK_OUT" 2 118 "8"
d G "T1_DIV_BY_1" 2 120 "0"
d G "T1_DIV_BY_2" 2 121 "0x10"
d G "T1_DIV_BY_4" 2 122 "0x20"
d G "T1_DIV_BY_8" 2 123 "0x30"
d G "T2_DISABLED" 2 128 "0"
d G "T2_DIV_BY_1" 2 129 "4"
d G "T2_DIV_BY_4" 2 130 "5"
d G "T2_DIV_BY_16" 2 131 "6"
d G "CCP_OFF" 2 137 "0"
d G "CCP_CAPTURE_FE" 2 138 "4"
d G "CCP_CAPTURE_RE" 2 139 "5"
d G "CCP_CAPTURE_DIV_4" 2 140 "6"
d G "CCP_CAPTURE_DIV_16" 2 141 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 142 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 143 "9"
d G "CCP_COMPARE_INT" 2 144 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 2 145 "0xB"
d G "CCP_PWM" 2 146 "0xC"
d G "CCP_PWM_PLUS_1" 2 147 "0x1c"
d G "CCP_PWM_PLUS_2" 2 148 "0x2c"
d G "CCP_PWM_PLUS_3" 2 149 "0x3c"
v G "CCP_1" 2 150 "int16"
v G "CCP_2" 2 154 "int16"
d G "SPI_MASTER" 2 161 "0x20"
d G "SPI_SLAVE" 2 162 "0x24"
d G "SPI_L_TO_H" 2 163 "0"
d G "SPI_H_TO_L" 2 164 "0x10"
d G "SPI_CLK_DIV_4" 2 165 "0"
d G "SPI_CLK_DIV_16" 2 166 "1"
d G "SPI_CLK_DIV_64" 2 167 "2"
d G "SPI_CLK_T2" 2 168 "3"
d G "SPI_SS_DISABLED" 2 169 "1"
d G "SPI_SAMPLE_AT_END" 2 171 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 172 "0x4000"
d G "UART_ADDRESS" 2 178 "2"
d G "UART_DATA" 2 179 "4"
d G "ADC_OFF" 2 186 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 187 "0x100"
d G "ADC_CLOCK_DIV_8" 2 188 "0x40"
d G "ADC_CLOCK_DIV_32" 2 189 "0x80"
d G "ADC_CLOCK_INTERNAL" 2 190 "0xc0" "Internal 2-6us"
d G "NO_ANALOGS" 2 194 "7" "None"
d G "ALL_ANALOG" 2 195 "0" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 2 196 "1" "A0 A1 A2 A5 VRefh=A3"
d G "AN0_AN1_AN3" 2 197 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 2 198 "5" "A0 A1 VRefh=A3"
d G "ANALOG_RA3_REF" 2 199 "1" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 2 200 "4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 2 201 "5" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 2 205 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 206 "1"
d G "ADC_READ_ONLY" 2 207 "6"
d G "L_TO_H" 2 219 "0x40"
d G "H_TO_L" 2 220 "0"
d G "GLOBAL" 2 222 "0x0BC0"
d G "INT_RTCC" 2 223 "0x0B20"
d G "INT_RB" 2 224 "0xFF0B08"
d G "INT_EXT" 2 225 "0x0B10"
d G "INT_AD" 2 226 "0x8C40"
d G "INT_TBE" 2 227 "0x8C10"
d G "INT_RDA" 2 228 "0x8C20"
d G "INT_TIMER1" 2 229 "0x8C01"
d G "INT_TIMER2" 2 230 "0x8C02"
d G "INT_CCP1" 2 231 "0x8C04"
d G "INT_CCP2" 2 232 "0x8D01"
d G "INT_SSP" 2 233 "0x8C08"
d G "INT_TIMER0" 2 234 "0x0B20"
D G "_STDLIB" 3 12 ""
D G "RAND_MAX" 3 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 3 26 "0"
T G "div_t" 3 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 3 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 16 "unsigned int8"
D G "size_t" 4 21 "unsigned int8"
D G "wchar_t" 4 22 "char"
D G "NULL" 4 23 "0"
D G "offsetof" 4 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 3 43 2 "FUNCTION"
C L "atof" 3 46 1 "*"
C L "atof" 3 46 1 "*"
V L "s" 3 50 "*int8"
F G "atof" 3 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 3 69 1 "*"
C L "atof" 3 69 1 "*"
C L "atof" 3 69 1 "*"
V L "s" 3 74 "*int8"
F G "atoe" 3 74 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 3 76 1 "*"
C L "atoe" 3 76 1 "*"
V L "s" 3 80 "*int8"
F G "atoi" 3 80 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 3 88 "*int8"
F G "atoi32" 3 88 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 3 76 2 "FUNCTION"
V L "num" 3 109 "sint32"
V L "base" 3 109 "int8"
V L "s" 3 109 "*int8"
F G "itoa" 3 109 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 3 111 1 "*"
C L "itoa" 3 111 1 "*"
V L "s" 3 115 "*int8"
F G "atol" 3 115 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 3 117 1 "*"
C L "atol" 3 117 1 "*"
C L "atol" 3 117 1 "*"
V L "s" 3 123 "*int8"
V L "endptr" 3 123 "*int8"
F G "strtod" 3 123 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 3 117 2 "FUNCTION"
C L "strtod" 3 126 1 "*"
C L "strtod" 3 126 1 "*"
C L "strtod" 3 126 2 "*"
C L "strtod" 3 139 1 "*"
C L "strtod" 3 139 1 "*"
C L "strtod" 3 139 1 "*"
C L "strtod" 3 139 1 "*"
V L "s" 3 145 "*int8"
V L "endptr" 3 145 "*int8"
V L "base" 3 145 "sint8"
F G "strtol" 3 145 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 3 147 1 "*"
C L "strtol" 3 147 1 "*"
C L "strtol" 3 147 1 "*"
C L "strtol" 3 147 1 "*"
V L "s" 3 153 "*int8"
V L "endptr" 3 153 "*int8"
V L "base" 3 153 "sint8"
F G "strtoul" 3 153 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 3 147 1 "FUNCTION"
C L "strtoul" 3 159 1 "*"
C L "strtoul" 3 159 1 "*"
C L "strtoul" 3 159 1 "*"
C L "strtoul" 3 159 1 "*"
C L "strtoul" 3 159 1 "*"
F G "rand" 3 168 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
V L "seed" 3 190 "int32"
F G "srand" 3 190 "void(int32 seed)" "Memory management functions"
C L "srand" 3 170 3 "FUNCTION"
V L "string" 3 204 "*int8"
F G "system" 3 204 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 3 170 1 "FUNCTION"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 4 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
D G "labs" 3 248 "abs"
V L "numer" 3 250 "sint8"
V L "denom" 3 250 "sint8"
F G "div" 3 250 "div_t(sint8 numer,sint8 denom)"
V L "numer" 3 251 "sint16"
V L "denom" 3 251 "sint16"
F G "ldiv" 3 251 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 3 228 4 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
D G "_STRING" 5 12 ""
C L "ldiv" 4 2 7 "FUNCTION"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 5 19 10 "FUNCTION"
V L "s1" 5 34 "*int8"
V L "s2" 5 34 "*int8"
V L "n" 5 34 "int8"
F G "memmove" 5 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 5 36 "*int8"
V L "sc2" 5 37 "*int8"
C L "strcopy" 5 19 3 "FUNCTION"
V L "s1" 5 53 "*int8"
V L "s2" 5 53 "*int8"
F G "strcopy" 5 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 55 "*int8"
C L "strncpy" 5 19 4 "FUNCTION"
V L "s1" 5 69 "*int8"
V L "s2" 5 69 "*int8"
V L "n" 5 69 "int8"
F G "strncpy" 5 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 71 "*int8"
C L "strcat" 5 19 3 "FUNCTION"
V L "s1" 5 86 "*int8"
V L "s2" 5 86 "*int8"
F G "strcat" 5 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 88 "*int8"
C L "strncat" 5 19 2 "FUNCTION"
V L "s1" 5 104 "*int8"
V L "s2" 5 104 "*int8"
V L "n" 5 104 "int8"
F G "strncat" 5 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 106 "*int8"
C L "memcmp" 5 19 3 "FUNCTION"
V L "s1" 5 128 "*int8"
V L "s2" 5 128 "*int8"
V L "n" 5 128 "int8"
F G "memcmp" 5 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 5 130 "*int8"
V L "su2" 5 130 "*int8"
C L "strcmp" 5 19 2 "FUNCTION"
V L "s1" 5 142 "*int8"
V L "s2" 5 142 "*int8"
F G "strcmp" 5 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 5 19 2 "FUNCTION"
V L "s1" 5 152 "*int8"
V L "s2" 5 152 "*int8"
F G "strcoll" 5 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 5 19 4 "FUNCTION"
V L "s1" 5 165 "*int8"
V L "s2" 5 165 "*int8"
V L "n" 5 165 "int8"
F G "strncmp" 5 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 5 19 3 "FUNCTION"
V L "s1" 5 177 "*int8"
V L "s2" 5 177 "*int8"
V L "n" 5 177 "int8"
F G "strxfrm" 5 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 179 "*int8"
V L "n1" 5 180 "int8"
C L "memchr" 5 19 3 "FUNCTION"
V L "s" 5 199 "*int8"
V L "c" 5 199 "int8"
V L "n" 5 199 "int8"
F G "memchr" 5 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 5 201 "int8"
V L "su" 5 202 "*int8"
C L "strchr" 5 19 2 "FUNCTION"
V L "s" 5 213 "*int8"
V L "c" 5 213 "int8"
F G "strchr" 5 214 "*int8(*int8 s,int8 c)"
V L "s1" 5 225 "*int8"
V L "s2" 5 225 "*int8"
F G "strcspn" 5 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 227 "*int8"
V L "sc2" 5 227 "*int8"
C L "strpbrk" 5 19 4 "FUNCTION"
V L "s1" 5 240 "*int8"
V L "s2" 5 240 "*int8"
F G "strpbrk" 5 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 242 "*int8"
V L "sc2" 5 242 "*int8"
C L "strrchr" 5 19 2 "FUNCTION"
V L "s" 5 255 "*int8"
V L "c" 5 255 "int8"
F G "strrchr" 5 256 "*int8(*int8 s,int8 c)"
V L "p" 5 257 "*int8"
V L "s1" 5 270 "*int8"
V L "s2" 5 270 "*int8"
F G "strspn" 5 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 272 "*int8"
V L "sc2" 5 272 "*int8"
C L "strstr" 5 19 6 "FUNCTION"
V L "s1" 5 289 "*int8"
V L "s2" 5 289 "*int8"
F G "strstr" 5 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 291 "*int8"
V L "t" 5 291 "*int8"
C L "strtok" 5 19 13 "FUNCTION"
V L "s1" 5 328 "*int8"
V L "s2" 5 328 "*int8"
F G "strtok" 5 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 5 330 "*int8"
V L "end" 5 330 "*int8"
V L "save" 5 331 "*int8"
V L "s" 5 377 "*int8"
F G "strlen" 5 378 "*int8(*int8 s)"
V L "sc" 5 379 "*int8"
C L "stricmp" 5 19 2 "FUNCTION"
V L "s1" 5 388 "*int8"
V L "s2" 5 388 "*int8"
F G "stricmp" 5 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 5 19 3 "FUNCTION"
V L "s" 5 402 "*int8"
F G "strlwr" 5 403 "*int8(*int8 s)"
V L "p" 5 404 "*int8"
V L "numer" 3 273 "sint8"
V L "denom" 3 273 "sint8"
F G "div" 3 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 3 275 "div_t"
V L "numer" 3 281 "sint16"
V L "denom" 3 281 "sint16"
F G "ldiv" 3 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 3 283 "ldiv_t"
V L "s" 3 289 "*int8"
F G "atof" 3 290 "float(*int8 s)"
V L "pow10" 3 291 "float"
V L "result" 3 292 "float"
V L "sign" 3 293 "int8"
V L "c" 3 294 "int8"
V L "ptr" 3 295 "int8"
V L "s" 3 410 "*int8"
F G "atoe" 3 411 "float(*int8 s)"
V L "pow10" 3 412 "float"
V L "result" 3 413 "float"
V L "sign" 3 414 "int8"
V L "expsign" 3 415 "int8"
V L "c" 3 416 "int8"
V L "ptr" 3 417 "int8"
V L "i" 3 418 "int8"
V L "exp" 3 419 "float"
V L "expcnt" 3 420 "int8"
C L "atoe" 3 446 1 "FUNCTION"
V L "s" 3 477 "*int8"
F G "atoi" 3 478 "sint8(*int8 s)"
V L "result" 3 479 "sint8"
V L "sign" 3 480 "int8"
V L "base" 3 480 "int8"
V L "index" 3 480 "int8"
V L "c" 3 481 "int8"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
V L "s" 3 546 "*int8"
F G "atol" 3 547 "sint16(*int8 s)"
V L "result" 3 548 "sint16"
V L "sign" 3 549 "int8"
V L "base" 3 549 "int8"
V L "index" 3 549 "int8"
V L "c" 3 550 "int8"
C L "atol" 3 446 1 "FUNCTION"
C L "atol" 3 446 1 "FUNCTION"
C L "atol" 3 446 1 "FUNCTION"
C L "atol" 3 446 1 "FUNCTION"
C L "mult_with10" 3 446 1 "FUNCTION"
V L "num" 3 613 "int32"
F G "mult_with10" 3 614 "sint32(int32 num)"
V L "s" 3 619 "*int8"
F G "atoi32" 3 620 "sint32(*int8 s)"
V L "result" 3 621 "sint32"
V L "sign" 3 622 "int8"
V L "base" 3 622 "int8"
V L "index" 3 622 "int8"
V L "c" 3 623 "int8"
C L "atoi32" 3 446 1 "FUNCTION"
C L "atoi32" 3 446 1 "FUNCTION"
C L "atoi32" 3 446 1 "FUNCTION"
C L "atoi32" 3 446 1 "FUNCTION"
C L "atoi32" 3 446 1 "FUNCTION"
V L "num" 3 818 "sint32"
V L "base" 3 818 "int8"
V L "s" 3 818 "*int8"
F G "itoa" 3 819 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 3 820 "int32"
V L "i" 3 821 "int8"
V L "sign" 3 821 "int8"
V L "cnt" 3 821 "int8"
V L "c" 3 822 "int8"
C L "itoa" 3 446 1 "FUNCTION"
C L "itoa" 3 446 1 "FUNCTION"
C L "itoa" 3 446 1 "FUNCTION"
C L "itoa" 3 446 1 "FUNCTION"
C L "itoa" 3 446 1 "FUNCTION"
V L "s" 3 856 "*int8"
V L "endptr" 3 856 "*int8"
F G "strtod" 3 856 "float(*int8 s,*int8 endptr)"
V L "pow10" 3 857 "float"
V L "result" 3 858 "float"
V L "sign" 3 859 "int8"
V L "point" 3 859 "int8"
V L "c" 3 860 "int8"
V L "ptr" 3 861 "int8"
V L "s" 3 1118 "*int8"
V L "endptr" 3 1118 "*int8"
V L "base" 3 1118 "sint8"
F G "strtoul" 3 1119 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 3 1120 "*int8"
V L "s1" 3 1120 "*int8"
V L "sd" 3 1120 "*int8"
V L "x" 3 1121 "int16"
V L "sign" 3 1122 "int8"
V L "digits" 3 1123 "int8[1]"
C L "strtoul" 3 446 1 "FUNCTION"
C L "strtoul" 3 446 1 "FUNCTION"
C L "strtoul" 3 446 1 "FUNCTION"
V L "s" 3 1180 "*int8"
V L "endptr" 3 1180 "*int8"
V L "base" 3 1180 "sint8"
F G "strtol" 3 1181 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 3 1182 "*int8"
V L "s1" 3 1182 "*int8"
V L "sd" 3 1182 "*int8"
V L "x" 3 1183 "sint16"
V L "sign" 3 1184 "int8"
V L "digits" 3 1185 "int8[1]"
C L "strtol" 3 446 1 "FUNCTION"
C L "strtol" 3 446 1 "FUNCTION"
C L "strtol" 3 446 1 "FUNCTION"
V L "string" 3 1243 "*int8"
F G "system" 3 1244 "sint8(*int8 string)"
V L "s" 3 1248 "*int8"
V L "n" 3 1248 "int8"
F G "mblen" 3 1249 "int8(*int8 s,int8 n)"
V L "pwc" 3 1253 "*int8"
V L "s" 3 1253 "*int8"
V L "n" 3 1253 "int8"
F G "mbtowc" 3 1254 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 3 1259 "*int8"
V L "wchar" 3 1259 "int8"
F G "wctomb" 3 1260 "int8(*int8 s,int8 wchar)"
V L "pwcs" 3 1265 "*int8"
V L "s" 3 1265 "*int8"
V L "n" 3 1265 "int8"
F G "mbstowcs" 3 1266 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 3 1271 "*int8"
V L "pwcs" 3 1271 "*int8"
V L "n" 3 1271 "int8"
F G "wcstombs" 3 1272 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 3 1281 "int32"
F G "rand" 3 1284 "int16()"
V L "seed" 3 1289 "int32"
F G "srand" 3 1290 "void(int32 seed)"
V L "p1" 3 1298 "*int8"
V L "p2" 3 1298 "*int8"
T G "*_Cmpfun" 3 1298 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 3 1300 "*int8"
V L "qitems" 3 1300 "int8"
V L "qsize" 3 1300 "int8"
V L "cmp" 3 1300 "_Cmpfun"
F G "qsort" 3 1300 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 3 1301 "int8"
V L "j" 3 1301 "int8"
V L "i" 3 1301 "int8"
V L "l" 3 1301 "int8"
V L "done" 3 1302 "int1"
V L "t" 3 1303 "int8[16]"
V L "key" 3 1328 "*int8"
V L "base" 3 1328 "*int8"
V L "num" 3 1328 "int8"
V L "width" 3 1328 "int8"
V L "cmp" 3 1328 "_Cmpfun"
F G "bsearch" 3 1329 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 3 1330 "*int8"
V L "q" 3 1330 "*int8"
V L "n" 3 1331 "int8"
V L "pivot" 3 1332 "int8"
V L "val" 3 1333 "sint8"
C L "bsearch" 3 446 1 "FUNCTION"
D G "LCD_TYPE" 0 4 "2"
D G "use_portb_lcd" 7 39 "TRUE"
V G "lcd" 7 49 "{int1 rs,int1 rw,int1 enable,int1 unused,int4 data}" "#locate lcd = getenv("sfr:PORTB")    // This puts the entire structure over the port"
D G "set_tris_lcd" 7 59 "(x) set_tris_c(x)"
D G "lcd_line_two" 7 74 "0x40" "LCD RAM address for the second line"
V G "LCD_INIT_STRING" 7 77 "int8[4]"
V G "LCD_WRITE" 7 85 "{int1 rs,int1 rw,int1 enable,int1 unused,int4 data}"
V G "LCD_READ" 7 86 "{int1 rs,int1 rw,int1 enable,int1 unused,int4 data}"
C L "lcd_read_byte" 7 2 1 "FUNCTION"
F G "lcd_read_byte" 7 90 "int8()"
V L "low" 7 91 "int8"
V L "high" 7 91 "int8"
V L "n" 7 109 "int8"
F G "lcd_send_nibble" 7 109 "void(int8 n)"
V L "address" 7 118 "int8"
V L "n" 7 118 "int8"
F G "lcd_send_byte" 7 118 "void(int8 address,int8 n)"
F G "lcd_init" 7 132 "void()"
V L "i" 7 133 "int8"
V L "x" 7 149 "int8"
V L "y" 7 149 "int8"
F G "lcd_gotoxy" 7 149 "void(int8 x,int8 y)"
V L "address" 7 150 "int8"
V L "c" 7 160 "int8"
F G "lcd_putc" 7 160 "void(int8 c)"
V L "x" 7 171 "int8"
V L "y" 7 171 "int8"
F G "lcd_getc" 7 171 "int8(int8 x,int8 y)"
V L "value" 7 172 "int8"
C L "lcd_getc" 7 2 1 "FUNCTION"
V L "a" 7 181 "*int8"
F G "lcd_puts" 7 182 "void(*int8 a)"
F G "get_key" 0 6 "int8()"
V G "q" 0 7 "int8[10]"
V G "z" 0 8 "int8[10]"
F G "MAIN" 0 11 "void()"
V L "w" 0 13 "int32[10]"
V L "r" 0 13 "int32"
V L "i" 0 13 "int32"
V L "x" 0 13 "int32"
V L "y" 0 13 "int32"
V L "z" 0 13 "int32"
V L "k" 0 13 "int32"
V L "a" 0 14 "int8"
C L "MAIN" 0 28 1 "FUNCTION"
C L "MAIN" 0 28 2 "FUNCTION"
C L "MAIN" 0 28 1 "FUNCTION"
C L "MAIN" 0 28 1 "FUNCTION"
C L "MAIN" 0 28 1 "FUNCTION"
C L "MAIN" 0 28 2 "FUNCTION"
C L "MAIN" 0 28 1 "FUNCTION"
C L "MAIN" 0 28 2 "FUNCTION"
F G "get_key" 0 114 "int8()"
V L "x" 0 115 "int8"
V L "i" 0 116 "int8"
C L "get_key" 0 28 1 "FUNCTION"
C L "get_key" 0 28 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_eeprom" 1 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
